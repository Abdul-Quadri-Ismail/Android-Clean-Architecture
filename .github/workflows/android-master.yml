name: Android CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Running linting using detekt,ktlint
  lint:
    name: Running lints
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Running Ktlint
        run: bash ./gradlew ktlint

      - name: Running detekt
        run: bash ./gradlew detekt

  # Running Unit Test Cases
  unitTest:
    needs: lint
    name: Running Unit Tests
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run Unit tests
        run: bash ./gradlew test --stacktrace

  #Generating Apk.
  apk:
    needs: [lint, unitTest]
    name: Generate APK
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant Permission to Execute
        run: chmod +x gradlew

      - name: Build debug APK
        run: bash ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v2-preview
        with:
          name: app
          path: app/build/outputs/apk/debug/app-debug.apk

  # Generating test coverage report.
  test-coverage:
    needs: unitTest
    name: Generate Test Coverage
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant Permission to Execute
        run: chmod +x gradlew

      - name: Generate Kotlin/Java modules coverage
        run: bash ./gradlew jacocoTestReport

      - name: Generate android modules coverage
        run: bash ./gradlew jacocoTestReportDebug

  # Uploading test coverage reports to codacy.
  codacy-coverage-reporter:
    needs: test-coverage
    runs-on: ubuntu-latest
    name: Codacy Coverage Report Uploader
    steps:
      - uses: actions/checkout@master
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ././cache/build/reports/jacoco/debug/jacoco.xml
